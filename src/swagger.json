{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Berlin Stolen Bike API Service",
    "description": "API documentation for Berlin Stolen Bike API Service (JOIN.COM - Coding Challenge)\n"
  },
  "host": "stolen-bikes-svc.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "case",
      "description": "Handles case reporting, assigning/resolving, searching & CRUD operations"
    },
    {
      "name": "police",
      "description": "Handles policemen, auto case assigning & CRUD operations"
    },
    {
      "name": "status",
      "description": "Handles status CRUD operations"
    }
  ],
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/cases": {
      "get": {
        "tags": ["case"],
        "description": "GET all cases (without filters)",
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "post": {
        "tags": ["case"],
        "description": "POST a case",
        "parameters": [
          {
            "name": "body",
            "description": "Case object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/cases/search": {
      "get": {
        "tags": ["case"],
        "description": "Search cases (with filters)",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword (in Type, color, description)",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusId",
            "in": "query",
            "description": "Case statusId (1:Open, 2: Inprogress, 3: Resolved)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/cases/{caseId}": {
      "get": {
        "tags": ["case"],
        "description": "GET a case by Id",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "caseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "put": {
        "tags": ["case"],
        "description": "Update a case (Whole object can be passed)",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "caseId",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Case object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Case"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": ["case"],
        "description": "Delete a case",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "caseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/cases/{caseId}/resolve": {
      "patch": {
        "tags": ["case"],
        "description": "Resolve a case",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "caseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/police": {
      "get": {
        "tags": ["police"],
        "description": "GET all polices (Without filters)",
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "post": {
        "tags": ["police"],
        "description": "POST a police",
        "parameters": [
          {
            "name": "body",
            "description": "Police object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Police"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/police/{policeId}": {
      "get": {
        "tags": ["police"],
        "description": "GET a police officer by Id",
        "parameters": [
          {
            "name": "policeId",
            "in": "path",
            "description": "policeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "put": {
        "tags": ["police"],
        "description": "UPDATE a police",
        "parameters": [
          {
            "name": "policeId",
            "in": "path",
            "description": "policeId",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Police object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Police"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": ["police"],
        "description": "Delete a police",
        "parameters": [
          {
            "name": "policeId",
            "in": "path",
            "description": "policeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/statuses": {
      "get": {
        "tags": ["status"],
        "description": "GET all statuses",
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "post": {
        "tags": ["status"],
        "description": "POST a status",
        "parameters": [
          {
            "name": "body",
            "description": "Status object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    },
    "/statuses/{statusId}": {
      "put": {
        "tags": ["status"],
        "description": "UPDATE a status",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "statusId",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Status object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": ["status"],
        "description": "Delete a status",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "statusId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Case": {
      "type": "object",
      "properties": {
        "stolenObject": {
          "type": "string",
          "format": "string"
        },
        "firstName": {
          "type": "string",
          "format": "string"
        },
        "lastName": {
          "type": "string",
          "format": "string"
        },
        "licenseNo": {
          "type": "string",
          "format": "string"
        },
        "color": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "Police": {
      "type": "object",
      "properties": {
        "extPoliceId": {
          "type": "string",
          "format": "string"
        },
        "firstName": {
          "type": "string",
          "format": "string"
        },
        "lastName": {
          "type": "string",
          "format": "string"
        },
        "division": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "Owner": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "format": "string"
        },
        "lastName": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    }
  }
}
